name: "Build Redocker Images"

on:
  schedule:
    - cron: "0 0 * * *"
  push:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  redocker:
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        version:
          - "4.3"
        type:
          - "minimal"
        target:
          - "linux"
          - "windows"
          - "web"
          # Experimental
          - "android"
          - "macos"
          - "ios"
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Cache Redot Binary
        uses: actions/cache@v4
        with:
          path: redocker/redot
          key: redot-${{ matrix.version }}-binary
          restore-keys: |
            redot-${{ matrix.version }}-binary
      - name: Prepare Binary
        run: |
          [ -e redocker/redot ] && exit 0
          file=$(
            curl -s https://api.github.com/repos/Redot-Engine/redot-engine/releases/tags/redot-${{ matrix.version }}-stable \
            | grep "browser_download_url.*Redot_v.*-stable_linux\.x86_64\.zip" \
            | cut -d '"' -f 4 - \
            | head -n 1
          )
          wget $file -O Redot.zip
          unzip Redot.zip
          mv ./Redot_v*-stable_linux.x86_64 redocker/redot
          rm Redot.zip
      - name: Cache Redot Export Templates
        uses: actions/cache@v4
        with:
          path: redocker/templates
          key: redot-${{ matrix.version }}-templates
          restore-keys: |
            redot-${{ matrix.version }}-templates
      - name: Prepare Export Templates
        run: |
          [ -d redocker/templates ] && exit 0
          file=$(
            curl -s https://api.github.com/repos/Redot-Engine/redot-engine/releases/tags/redot-${{ matrix.version }}-stable \
            | grep "browser_download_url.*Redot_v.*-stable_export_templates\.tpz" \
            | cut -d '"' -f 4 - \
            | head -n 1
          )
          wget $file -O Redot.zip
          unzip Redot.zip -d redocker
          rm -f redocker/templates/*debug*
      - name: Cache Android Commandline Tools
        uses: actions/cache@v4
        with:
          path: redocker/android
          key: redot-${{ matrix.version }}-android
          restore-keys: |
            redot-${{ matrix.version }}-android
        run: |
          [ -d redocker/android ] && exit 0
          file="https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip"
          wget $file -O cli-tools.zip
          unzip cli-tools.zip -d redocker
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Image
        uses: docker/build-push-action@v6
        with:
          context: "./redocker"
          push: true
          build-args: |
            REDOT_VERSION=${{ matrix.version }}
            REDOT_TARGET=${{ matrix.target }}
          secrets: |
            "github_token=${{ secrets.GITHUB_TOKEN }}"
          tags: |
            ghcr.io/redot-engine/redocker/${{ matrix.type }}/${{ matrix.target }}-${{ matrix.version }}:latest
            ghcr.io/redot-engine/redocker/${{ matrix.type }}/${{ matrix.target }}-${{ matrix.version }}:${{ github.run_number }}
